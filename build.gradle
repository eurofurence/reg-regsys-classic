// ======================= start configuration section ========================================

// configure the convention to build for
// (used as a path component in several places)

def convention = "ef" // "ef", "mmc"

// configure the logging mode to build
// (used to select a pair of config files, either ecs or plain)
def logmode = "ecs" // "plain", "ecs"

// ======================= end configuration section ========================================
buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'java'

description = "The Eurofurence Registration System"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group = 'org.eurofurence.regsys'
version = '0.1.0-SNAPSHOT'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceSets {
    main { java { srcDirs = ['src/java'] } }
}

dependencies {
    implementation 'org.apache.tomcat:tomcat-servlet-api:10.1.41'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.apache.velocity:velocity-engine-core:2.4.1'
    implementation 'org.apache.commons:commons-text:1.13.0'
    implementation 'org.slf4j:slf4j-api:2.0.17'
    implementation 'co.elastic.logging:logback-ecs-encoder:1.6.0'
    implementation 'ch.qos.logback:logback-classic:1.5.18'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.19.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.19.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.19.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'commons-validator:commons-validator:1.9.0'

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.5'

    // security updates
    implementation 'commons-codec:commons-codec:1.18.0'

    // embed tomcat 10.1
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:10.1.41'

    implementation 'co.elastic.logging:jul-ecs-formatter:1.7.0'
    implementation 'co.elastic.logging:ecs-logging-core:1.6.0'
}

jar {
    // make jar runnable
    manifest {
        attributes(
                'Main-Class' : 'launch.Main'
        )
    }

    // keep jar clean:
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'

    from ('src/html/' + convention) { into 'WEB-INF/html' }
    from ('src/html/common') { into 'WEB-INF/html'; duplicatesStrategy = 'exclude' }

    from ('src/tpl/' + convention + '/pages') // { into 'WEB-INF/templates' }
    from ('src/tpl/common/pages') { duplicatesStrategy = 'exclude' } // { into 'WEB-INF/templates'; duplicatesStrategy = 'exclude' }

    from ('src/logging-juli-'+logmode+'.properties') { into 'WEB-INF/config' }
    from ('src/logback-'+logmode+'.xml') { into '' }

    from (
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        // configurations.runtimeClasspath.collect { it.isDirectory() ? println ('Folder ' + it.name) : println ('File ' + it.name)}
    ) { duplicatesStrategy = 'exclude' }

    rename 'logback-[a-z]+.xml', 'logback.xml'
    rename 'logging-juli-[a-z]+.properties', 'logging-juli.properties'
}

task runExecutableJar(type: JavaExec) {
    classpath = files(tasks.jar)
}

task downloadJavascriptDependencies() {
    ext.downloadFile = { localPath, remoteURL ->
        def f = new File(localPath)
        if (!f.exists()) {
            new URL(remoteURL).withInputStream{ i -> f.withOutputStream{ it << i }}
        }
    }

    doLast {
        // https://github.com/vuejs/
        downloadFile('./src/html/common/vue/vue.global.prod.js', 'https://unpkg.com/vue@3.5.12/dist/vue.global.prod.js')

        // https://github.com/intlify/vue-i18n
        downloadFile('./src/html/common/vue/vue-i18n.global.prod.js', 'https://unpkg.com/vue-i18n@9.14.1/dist/vue-i18n.global.prod.js')

        // https://github.com/axios/axios
        downloadFile('./src/html/common/vue/axios.min.js', 'https://unpkg.com/axios@1.7.7/dist/axios.min.js')
    }
}

jar.dependsOn(downloadJavascriptDependencies)
